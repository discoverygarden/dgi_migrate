---
id: dspace_nodes
label: Create nodes from DSpace METS file.
migration_group: dspace_to_dgis
source:
  plugin: dgi_migrate.source.migration
  track_changes: true
  migration: dspace_mets_files
  dsf_misc:
    case_insensitive: &case_insensitive true
    base_mods_node: &base_mods_node
      plugin: dgi_migrate.process.xml.context_query
      missing_behavior: skip_process
      source: '@_mods_node'
      xpath: '@_mets_xpath'
    nested_mods_node: &nested_mods_node
      plugin: dgi_migrate.process.xml.context_query
      source: 'parent_value'
      xpath: 'parent_row/dest/_mets_xpath'
    generic_term:
      after: &generic_term_after
        _auth_value_uri:
          - << : *nested_mods_node
            query: 'string(@valueURI)'
            method: evaluate
        _auth_source:
          - << : *nested_mods_node
            query: 'string(@authority)'
            method: evaluate
        _value:
          - << : *nested_mods_node
            query: 'normalize-space(.)'
            method: evaluate
        actual:
          - plugin: get
            source:
              - '@_auth_source'
              - '@_auth_value_uri'
              - '@_value'
              # XXX: Needs to be provided wherever this is used, corresponding
              # to the vocab in which to do the things.
              - '@_vid'
          - plugin: flatten
          - plugin: migration_lookup
            migration: dgis_stub_terms_generic
            stub_id: dgis_stub_terms_generic
      extract: &generic_term_extract
        plugin: dgi_migrate.process.single_extract
        index: [actual]

destination:
  plugin: entity:node
  default_bundle: islandora_object
  validate: &validate true

process:
  _zip_scheme:
    - plugin: default_value
      default_value: zip://
  _mets_fragment:
    - plugin: default_value
      default_value: '#mets.xml'
  _dspace_zip_uri:
    - plugin: dgi_migrate.load_entity
      source: fid
      entity_type: entity:file
    - plugin: dgi_migrate.method
      method: getFileUri
    - plugin: dgi_migrate.realpath
  _mets_xpath:
    - plugin: concat
      source:
        - '@_zip_scheme'
        - '@_dspace_zip_uri'
        - '@_mets_fragment'
    - plugin: dgi_migrate.process.xml.domfile
    - plugin: dgi_migrate.process.xml.xpath
      namespaces:
        mets: 'http://www.loc.gov/METS/'
        mods: 'http://www.loc.gov/mods/v3'
        xsi: 'http://www.w3.org/2001/XMLSchema-instance'
        xlink: 'http://www.w3.org/1999/xlink'
        dim: 'http://www.dspace.org/xmlns/dspace/dim'
  _mets_node:
    - plugin: skip_on_empty
      method: process
      source: '@_mets_xpath'
    - plugin: dgi_migrate.method
      method: query
      args:
        - '//mets:mets[1]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: array_shift
  _mods_node:
    - plugin: skip_on_empty
      method: process
      source: '@_mets_xpath'
    - plugin: dgi_migrate.method
      method: query
      args:
        - '/mets:mets/mets:dmdSec/mets:mdWrap[@MDTYPE="MODS"]/mets:xmlData/mods:mods'
    - plugin: callback
      callable: iterator_to_array
    - plugin: array_shift

  ##### METADATA #####
  status:
    - plugin: default_value
      default_value: 1
  title:
    - plugin: dgi_migrate.process.xml.context_query
      source: '@_mets_node'
      xpath: '@_mets_xpath'
      method: evaluate
      query: 'string(//mets:mdWrap[@MDTYPE="MODS"]/mets:xmlData//mods:titleInfo/mods:title)'
    - plugin: default_value
      default_value: Untitled
    - plugin: substr
      start: 0
      length: 255
  field_handle:
    - << : *base_mods_node
      query: 'mods:identifier[@type="uri"]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  nid:
    - plugin: migration_lookup
      source: '@field_handle'
      migration: dspace_stub_nodes
  _parent_handle:
    - plugin: dgi_migrate.process.xml.context_query
      missing_behavior: skip_process
      source: '@_mets_node'
      xpath: '@_mets_xpath'
      query: 'mets:structMap[@LABEL="Parent"]//mets:mptr[@LOCTYPE="HANDLE"]/@xlink:href'
    - plugin: skip_on_empty
      method: process
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  _handle_url:
    - plugin: default_value
      default_value: 'http://hdl.handle.net/'
  field_member_of:
    - plugin: concat
      source:
        - '@_handle_url'
        - '@_parent_handle'
    - plugin: skip_on_empty
      method: process
    - plugin: explode
      limit: 0
      delimiter: ' '
    - plugin: migration_lookup
      migration: dspace_stub_nodes
      stub_id: dspace_stub_nodes
  _is_Collection:
    - plugin: dgi_migrate.process.xml.context_query
      missing_behavior: skip_process
      source: '@_mets_node'
      xpath: '@_mets_xpath'
      query: 'mets:dmdSec[@ID="dmdSec_2"]/mets:mdWrap/mets:xmlData/dim:dim/@dspaceType'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
    - plugin: skip_on_value
      method: process
      value: ITEM
  _is_Item:
    - plugin: dgi_migrate.process.xml.context_query
      source: '@_mets_node'
      xpath: '@_mets_xpath'
      method: evaluate
      query: 'string(//mets:fileSec/mets:fileGrp[@USE="ORIGINAL"]/mets:file/@MIMETYPE)'
    - plugin: default_value
      default_value: UNKNOWN

  # Basing the model off of the mimetype or Dspace type (COLLECTION, COMMUNITY,
  # OR ITEM).
  _i8_model_uri:
    - plugin: null_coalesce
      source:
        - '@_is_Collection'
        - '@_is_Item'
    - plugin: static_map
      bypass: false
      map:
        'audio/aac': 'http://purl.org/coar/resource_type/c_18cc'
        'application/msword': 'https://schema.org/DigitalDocument'
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'https://schema.org/DigitalDocument'
        'image/gif': 'http://purl.org/coar/resource_type/c_c513'
        'image/jp2': 'http://purl.org/coar/resource_type/c_c513'
        'image/jpeg': 'http://purl.org/coar/resource_type/c_c513'
        'image/jpg': 'http://purl.org/coar/resource_type/c_c513'
        'image/pjpeg': 'http://purl.org/coar/resource_type/c_c513'
        'text/jpg': 'http://purl.org/coar/resource_type/c_c513'
        'audio/mpeg': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/mpeg3': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/x-mpeg': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/x-mpeg-3': 'http://purl.org/coar/resource_type/c_18cc'
        'video/x-mpeg': 'http://purl.org/coar/resource_type/c_18cc'
        'video/mp4': 'http://purl.org/coar/resource_type/c_12ce'
        'application/pdf': 'https://schema.org/DigitalDocument'
        'image/png': 'http://purl.org/coar/resource_type/c_c513'
        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'https://schema.org/DigitalDocument'
        'application/mspowerpoint': 'https://schema.org/DigitalDocument'
        'application/powerpoint': 'https://schema.org/DigitalDocument'
        'application/vnd.ms-powerpoint': 'https://schema.org/DigitalDocument'
        'application/x-mspowerpoint': 'https://schema.org/DigitalDocument'
        'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'https://schema.org/DigitalDocument'
        'application/rtf': 'https://schema.org/DigitalDocument'
        'application/x-rtf': 'https://schema.org/DigitalDocument'
        'text/richtext': 'https://schema.org/DigitalDocument'
        'image/tif': 'http://purl.org/coar/resource_type/c_c513'
        'image/tiff': 'http://purl.org/coar/resource_type/c_c513'
        'image/x-tiff': 'http://purl.org/coar/resource_type/c_c513'
        'text/plain': 'https://schema.org/DigitalDocument'
        'text/html': 'https://schema.org/DigitalDocument'
        'audio/vnd.wave': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/wav': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/wave': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/x-wav': 'http://purl.org/coar/resource_type/c_18cc'
        'audio/x-wave': 'http://purl.org/coar/resource_type/c_18cc'
        'application/excel': 'https://schema.org/DigitalDocument'
        'application/vnd.ms-excel': 'https://schema.org/DigitalDocument'
        'application/x-excel': 'https://schema.org/DigitalDocument'
        'application/x-msexcel': 'https://schema.org/DigitalDocument'
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'https://schema.org/DigitalDocument'
        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': 'https://schema.org/DigitalDocument'
        'application/vnd.ms-xpsdocument': 'https://schema.org/DigitalDocument'
        'COLLECTION': 'http://purl.org/dc/dcmitype/Collection'
        'COMMUNITY': 'http://purl.org/dc/dcmitype/Collection'
        'UNKNOWN': 'https://schema.org/DigitalDocument'
    - plugin: skip_on_empty
      method: row
      message: 'Failed to map the dspace type to an islandora model.'
  field_model:
    - plugin: entity_lookup
      source: '@_i8_model_uri'
      bundle_key: vid
      bundle: islandora_models
      value_key: field_external_uri
      entity_type: taxonomy_term
      ignore_case: true
    - plugin: skip_on_empty
      method: row
      message: 'Failed to lookup the model taxonomy term.'
  _resource_type:
    - << : *base_mods_node
      query: 'mods:typeOfResource'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: callback
      callable: array_filter
  field_resource_type:
    - plugin: default_value
      source: '@_resource_type'
      default_value: Unspecified
    - plugin: entity_generate
      bundle: resource_types
      bundle_key: vid
      entity_type: taxonomy_term
      value_key: name
      ignore_case: *case_insensitive
  field_display_hints:
    - plugin: skip_on_value
      source: '@_i8_model_uri'
      method: process
      value: 'http://purl.org/dc/dcmitype/Collection'
    - plugin: dgi_migrate.process.static_map
      source: '@_i8_model_uri'
      default_value: []
      map:
        - ['https://schema.org/DigitalDocument', ['http://mozilla.github.io/pdf.js']]
        - ['http://purl.org/coar/resource_type/c_c513', ['http://openseadragon.github.io']]
        - ['http://id.loc.gov/ontologies/bibframe/part', ['http://openseadragon.github.io']]
    - plugin: flatten
    - plugin: skip_on_empty
      method: process
    - plugin: entity_lookup
      bundle_key: vid
      bundle: islandora_display
      value_key: field_external_uri
      entity_type: taxonomy_term
      # XXX: migrate_plus's case comparison makes assumptions about the entity's
      # "main" property... we want "uri", but it assumes "value".
      ignore_case: true

  field_description:
    - << : *base_mods_node
      query: 'mods:abstract'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  field_extent:
    - << : *base_mods_node
      query: 'mods:physicalDescription/mods:extent'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  field_use_and_reproduction:
    - << : *base_mods_node
      query: 'mods:accessCondition[@type="useAndReproduction"]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  _genre:
    - << : *base_mods_node
      query: 'mods:genre'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  field_genre:
    - plugin: default_value
      source: '@_genre'
      default_value: Unspecified
    - plugin: entity_generate
      bundle: genre
      bundle_key: vid
      entity_type: taxonomy_term
      value_key: name
      ignore_case: *case_insensitive
  field_local_identifier:
    - << : *base_mods_node
      query: 'mods:identifier[@type="local"]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  _language:
    - << : *base_mods_node
      query: 'mods:language/mods:languageTerm'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  field_language:
    - plugin: default_value
      source: '@_language'
      default_value: Unspecified
    - plugin: entity_generate
      bundle: language
      bundle_key: vid
      entity_type: taxonomy_term
      value_key: name
      ignore_case: *case_insensitive
  field_note:
    - << : *base_mods_node
      query: 'mods:note[not(@type)]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: single_value
    - plugin: null_coalesce
  field_title:
    - << : *base_mods_node
      query: 'mods:titleInfo'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: title
      process_values: true
      values:
        field_title_type:
          - << : *nested_mods_node
            query: '@type'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        field_title:
          - << : *nested_mods_node
            query: 'mods:title'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
  field_note_paragraph:
    - << : *base_mods_node
      query: 'mods:note[@type="sponsorship"]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: note
      process_values: true
      values:
        field_note_type:
          - plugin: default_value
            default_value: 'funding'
        field_note:
          - plugin: dgi_migrate.subproperty
            source: 'parent_value'
            property: nodeValue
  field_related_item_paragraph:
    - << : *base_mods_node
      query: 'mods:relatedItem'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: related_item
      process_values: true
      values:
        field_relationship_type:
          - << : *nested_mods_node
            query: '@type'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: callback
            callable: array_filter
          - plugin: skip_on_empty
            method: process
          - plugin: multiple_values
          - plugin: entity_lookup
            bundle: mods_relation_types
            bundle_key: vid
            entity_type: taxonomy_term
            value_key: name
          - plugin: skip_on_empty
            method: row
            message: "Encountered invalid relatedItem/@type attribute"
        # The MODS in the export is invalid, containing text in <relatedItem>,
        # but it's the title, map it in.
        field_title_plain:
          - << : *nested_mods_node
            query: '.'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: callback
            callable: trim
          - plugin: single_value
          - plugin: callback
            callable: array_filter
          - plugin: null_coalesce
          - plugin: callback
            callable: trim
        field_url/uri:
          - << : *nested_mods_node
            query: 'mods:location/mods:url[normalize-space()]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: callback
            callable: trim
          - plugin: single_value
          - plugin: callback
            callable: array_filter
          - plugin: null_coalesce
        field_related_item_extent:
          - << : *nested_mods_node
            query: 'mods:physicalDescription/mods:extent[normalize-space()]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: callback
            callable: trim
          - plugin: single_value
          - plugin: callback
            callable: array_filter
          - plugin: null_coalesce
  # Date Accessioned.
  _origin_info_date_accessioned:
    - << : *base_mods_node
      query: 'mods:extension/mods:dateAccessioned[not(@point)]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: skip_on_empty
      method: process
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: origin_information
      process_values: true
      values:
        field_date_captured:
          - plugin: get
            source: parent_value
          - plugin: dgi_migrate_edtf_validator
            intervals: true
            strict: true
        field_event_type:
          - plugin: default_value
            default_value: "dateAccessioned"
  # Date Available.
  _origin_info_date_available:
    - << : *base_mods_node
      query: 'mods:extension/mods:dateAvailable[not(@point)]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: skip_on_empty
      method: process
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: origin_information
      process_values: true
      values:
        field_date_issued:
          - plugin: get
            source: parent_value
          - plugin: dgi_migrate_edtf_validator
            intervals: true
            strict: true
        field_event_type:
          - plugin: default_value
            default_value: "dateAvailable"
  _origin_info_from_mods:
    - << : *base_mods_node
      query: 'mods:originInfo'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_paragraph_generate
      validate: *validate
      type: origin_information
      process_values: true
      values:
        _field_date_issued_single:
          - << : *nested_mods_node
            query: 'mods:dateIssued[not(@point)]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        _field_date_issued_start:
          - << : *nested_mods_node
            query: 'mods:dateIssued[@point="start"]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        _field_date_issued_end:
          - << : *nested_mods_node
            query: 'mods:dateIssued[@point="end"]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        field_date_issued:
          - plugin: dgi_migrate.process.assemble_date
            single_date: '@_field_date_issued_single'
            range_start: '@_field_date_issued_start'
            range_end: '@_field_date_issued_end'
            get_values: true
          - plugin: dgi_migrate_edtf_validator
            intervals: true
            strict: true
        _field_other_date_single:
          - << : *nested_mods_node
            query: 'mods:dateOther[not(@point)]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        _field_other_date_start:
          - << : *nested_mods_node
            query: 'mods:dateOther[@point="start"]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        _field_other_date_end:
          - << : *nested_mods_node
            query: 'mods:dateOther[@point="end"]'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
          - plugin: single_value
          - plugin: null_coalesce
        field_other_date:
          - plugin: dgi_migrate.process.assemble_date
            single_date: '@_field_other_date_single'
            range_start: '@_field_other_date_start'
            range_end: '@_field_other_date_end'
            get_values: true
          - plugin: dgi_migrate_edtf_validator
            intervals: true
            strict: true
        field_publisher:
          - << : *nested_mods_node
            query: 'mods:publisher'
          - plugin: callback
            callable: iterator_to_array
          - plugin: multiple_values
          - plugin: dgi_migrate.subproperty
            property: nodeValue
  field_origin_information:
    - plugin: merge
      source:
        - '@_origin_info_date_accessioned'
        - '@_origin_info_date_available'
        - '@_origin_info_from_mods'
  field_table_of_contents:
    - << : *base_mods_node
      query: 'mods:tableOfContents'
    - plugin: callback
      callable: iterator_to_array
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
  field_temporal_subject:
    - << : *base_mods_node
      query: 'mods:subject/mods:temporal[normalize-space()]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: skip_on_empty
      method: process
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: callback
      callable: trim
    - plugin: entity_generate
      bundle: temporal
      bundle_key: vid
      entity_type: taxonomy_term
      value_key: name
      ignore_case: *case_insensitive
  _subject_topic:
    - << : *base_mods_node
      query: 'mods:subject/mods:topic[normalize-space()]'
    - plugin: callback
      callable: iterator_to_array
    - plugin: skip_on_empty
      method: process
    - plugin: multiple_values
    - plugin: dgi_migrate.subproperty
      property: nodeValue
    - plugin: callback
      callable: trim
    - plugin: entity_generate
      bundle: subject
      bundle_key: vid
      entity_type: taxonomy_term
      value_key: name
      ignore_case: *case_insensitive
  field_subject:
    - plugin: get
      source:
        - '@_subject_topic'
    - plugin: flatten
  field_linked_agent:
    - << : *base_mods_node
      query: 'mods:name[not(@type)]'
    - plugin: dgi_migrate.typed_relation
      field_name: node.islandora_object.field_linked_agent
      xpath: '@_mets_xpath'
      default_role: 'relators:asn'
      process_values: true
      values:
        _authority:
          - << : *nested_mods_node
            query: 'normalize-space(@authority)'
            method: evaluate
        _value_uri:
          - << : *nested_mods_node
            query: 'normalize-space(@valueURI)'
            method: evaluate
        _given_name:
          - << : *nested_mods_node
            query: 'normalize-space(mods:namePart[@type="given"][normalize-space()][1])'
            method: evaluate
        _family_name:
          - << : *nested_mods_node
            query: 'normalize-space(mods:namePart[@type="family"][normalize-space()][1])'
            method: evaluate
        _date_name:
          - << : *nested_mods_node
            query: 'normalize-space(mods:namePart[@type="date"][normalize-space()][1])'
            method: evaluate
        _display_form:
          - << : *nested_mods_node
            query: 'normalize-space(mods:displayForm[normalize-space()][1])'
            method: evaluate
        _untyped_names:
          - << : *nested_mods_node
            query: 'normalize-space(mods:namePart[not(@type)][normalize-space()])'
            method: evaluate
        target_id:
          - plugin: get
            source:
              - '@_authority'
              - '@_value_uri'
              - '@_untyped_names'
              - '@_given_name'
              - '@_family_name'
              - '@_date_name'
              - '@_display_form'
          - plugin: flatten
          - plugin: migration_lookup
            migration: dspace_stub_terms_person
            stub_id: dspace_stub_terms_person
          - plugin: skip_on_empty
            method: row

migration_dependencies:
  required:
    - dgis_mets_files
    - islandora_tags
    - dspace_stub_terms_person
    - dspace_stub_terms_generic
    - dspace_stub_nodes

dependencies:
  enforced:
    module:
      - dgi_migrate
      - dgi_migrate_dspace
      - dgi_migrate_paragraphs
